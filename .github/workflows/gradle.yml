# Workflow 이름
name: Newsee Backend CI/CD

# 어떤 이벤트가 발생하면 workflow 실행할 지 명시
on:
  # prod 브랜치에 push나 pull request 발생 시
  push:
    branches: [ "prod" ]
  pull_request:
    branches: [ "prod" ]

# 위 이벤트 발생 시 실행될 작업들
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - run: echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > keystore.p12

      - name: Build with Gradle
        run: ./gradlew clean build --exclude-task test

      # DockerHub 로그인
      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Docker 이미지 빌드
      - name: Docker Image Build
        run: docker build -f Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }} .

      # DockerHub Push
      - name: DockerHub Push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}

      # EC2 인스턴스 접속 및 애플리케이션 실행
      - name: Application Run on NCP Server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.NCP_HOST }}
          username: ${{ secrets.NCP_USERNAME }}
          key: ${{ secrets.NCP_KEY }}
          script: |
            sudo docker kill ${{ secrets.PROJECT_NAME }}
            sudo docker rm -f ${{ secrets.PROJECT_NAME }}
            sudo docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}  
            sudo docker run -p ${{ secrets.PORT }}:${{ secrets.PORT }} \
            --name ${{ secrets.PROJECT_NAME }} \
            -e SPRING_PROFILES_ACTIVE=prod \
            -e MYSQL_PROD_URL=${{ secrets.MYSQL_PROD_URL }} \
            -e MYSQL_PROD_USERNAME=${{ secrets.MYSQL_PROD_USERNAME }} \
            -e MYSQL_PROD_PASSWORD=${{ secrets.MYSQL_PROD_PASSWORD }} \
            -e JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} \
            -e CLIENT_ID=${{ secrets.CLIENT_ID }} \
            -e REDIRECT_URI=${{ secrets.REDIRECT_URI }} \
            -e NEWS_API_KEY=${{ secrets.NEWS_API_KEY }} \
            -e NEWSDATA_API_KEY=${{ secrets.NEWSDATA_API_KEY }} \
            -d ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}